<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
  <PropertyGroup>
    <!-- The configuration and platform will be used to determine which assemblies to include from solution and
				 project documentation sources -->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9fa42e16-83b8-44de-b906-41ddcd493a45}</ProjectGuid>
    <SHFBSchemaVersion>1.9.9.0</SHFBSchemaVersion>
    <!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual Studio adds them anyway -->
    <AssemblyName>Documentation</AssemblyName>
    <RootNamespace>Documentation</RootNamespace>
    <Name>Documentation</Name>
    <!-- SHFB properties -->
    <FrameworkVersion>.NET Framework 4.5.1</FrameworkVersion>
    <OutputPath>.\</OutputPath>
    <HtmlHelpName>api</HtmlHelpName>
    <Language>en-US</Language>
    <DocumentationSources>
      <DocumentationSource sourceFile="..\..\src\ExpressiveAnnotations\bin\Release\ExpressiveAnnotations.dll" />
<DocumentationSource sourceFile="..\..\src\ExpressiveAnnotations.MvcUnobtrusive\bin\Release\ExpressiveAnnotations.MvcUnobtrusive.dll" />
<DocumentationSource sourceFile="..\..\src\ExpressiveAnnotations.MvcUnobtrusive\bin\Release\ExpressiveAnnotations.MvcUnobtrusive.xml" />
<DocumentationSource sourceFile="..\..\src\ExpressiveAnnotations\bin\Release\ExpressiveAnnotations.xml" /></DocumentationSources>
    <BuildAssemblerVerbosity>OnlyWarningsAndErrors</BuildAssemblerVerbosity>
    <HelpFileFormat>HtmlHelp1</HelpFileFormat>
    <IndentHtml>False</IndentHtml>
    <KeepLogFile>False</KeepLogFile>
    <DisableCodeBlockComponent>False</DisableCodeBlockComponent>
    <CppCommentsFixup>False</CppCommentsFixup>
    <CleanIntermediates>True</CleanIntermediates>
    <MaximumGroupParts>2</MaximumGroupParts>
    <NamespaceGrouping>False</NamespaceGrouping>
    <SyntaxFilters>Standard</SyntaxFilters>
    <SdkLinkTarget>Blank</SdkLinkTarget>
    <RootNamespaceContainer>False</RootNamespaceContainer>
    <PresentationStyle>VS2013</PresentationStyle>
    <Preliminary>False</Preliminary>
    <NamingMethod>Guid</NamingMethod>
    <HelpTitle>ExpressiveAnnotations API</HelpTitle>
    <ContentPlacement>AboveNamespaces</ContentPlacement>
    <NamespaceSummaries>
      <NamespaceSummaryItem name="(global)" isDocumented="False" />
<NamespaceSummaryItem name="ExpressiveAnnotations.Analysis" isDocumented="True">Namespace provides logic related to lexical and syntactic analysis of specified expressions.</NamespaceSummaryItem>
<NamespaceSummaryItem name="ExpressiveAnnotations.Attributes" isDocumented="True">Namespace provides expressive attributes that are used to define metadata for properties.</NamespaceSummaryItem>
<NamespaceSummaryItem name="ExpressiveAnnotations.MvcUnobtrusive.Providers" isDocumented="True">Namespace provides validator providers.</NamespaceSummaryItem>
<NamespaceSummaryItem name="ExpressiveAnnotations.MvcUnobtrusive.Validators" isDocumented="True">Namespace provides expressive validators for a specified validation types.</NamespaceSummaryItem></NamespaceSummaries>
    <VisibleItems>InheritedMembers, Protected, ProtectedInternalAsProtected</VisibleItems>
    <ProjectSummary>ExpressiveAnnotations is a small .NET and JavaScript library, which provides annotation-based conditional validation mechanisms. Given RequiredIf and AssertThat attributes allow to forget about imperative way of step-by-step verification of validation conditions in many cases. This in turn results in less amount of code which is also more condensed, since fields validation requirements are applied as metadata, just in the place of such fields declaration.</ProjectSummary>
    <RootNamespaceTitle>
    </RootNamespaceTitle>
  </PropertyGroup>
  <!-- There are no properties for these groups.  AnyCPU needs to appear in order for Visual Studio to perform
			 the build.  The others are optional common platform types that may appear. -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">
  </PropertyGroup>
  <!-- Import the SHFB build targets -->
  <Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" />
</Project>